@page "/fetchdata"
@using AlbyOnContainers.Tools.Catalog.Model
@using GraphQL
@using GraphQL.Client.Http
@inject GraphQLHttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_products == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in _products)
        {
            <tr>
                <td>@product.Id</td>
                <td>@product.Name</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private ProductType[] _products;

    protected override async Task OnInitializedAsync()
    {
        var request = new GraphQLRequest {Query = @"{products { id, name }}"};
        var response = await Http.SendQueryAsync<ProductsType>(request);

        _products = response.Data.Products.ToArray();
    }
}